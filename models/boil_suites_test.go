// Code generated by SQLBoiler 4.16.2 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import "testing"

// This test suite runs each operation test in parallel.
// Example, if your database has 3 tables, the suite will run:
// table1, table2 and table3 Delete in parallel
// table1, table2 and table3 Insert in parallel, and so forth.
// It does NOT run each operation group in parallel.
// Separating the tests thusly grants avoidance of Postgres deadlocks.
func TestParent(t *testing.T) {
	t.Run("Todos", testTodos)
}

func TestDelete(t *testing.T) {
	t.Run("Todos", testTodosDelete)
}

func TestQueryDeleteAll(t *testing.T) {
	t.Run("Todos", testTodosQueryDeleteAll)
}

func TestSliceDeleteAll(t *testing.T) {
	t.Run("Todos", testTodosSliceDeleteAll)
}

func TestExists(t *testing.T) {
	t.Run("Todos", testTodosExists)
}

func TestFind(t *testing.T) {
	t.Run("Todos", testTodosFind)
}

func TestBind(t *testing.T) {
	t.Run("Todos", testTodosBind)
}

func TestOne(t *testing.T) {
	t.Run("Todos", testTodosOne)
}

func TestAll(t *testing.T) {
	t.Run("Todos", testTodosAll)
}

func TestCount(t *testing.T) {
	t.Run("Todos", testTodosCount)
}

func TestHooks(t *testing.T) {
	t.Run("Todos", testTodosHooks)
}

func TestInsert(t *testing.T) {
	t.Run("Todos", testTodosInsert)
	t.Run("Todos", testTodosInsertWhitelist)
}

func TestReload(t *testing.T) {
	t.Run("Todos", testTodosReload)
}

func TestReloadAll(t *testing.T) {
	t.Run("Todos", testTodosReloadAll)
}

func TestSelect(t *testing.T) {
	t.Run("Todos", testTodosSelect)
}

func TestUpdate(t *testing.T) {
	t.Run("Todos", testTodosUpdate)
}

func TestSliceUpdateAll(t *testing.T) {
	t.Run("Todos", testTodosSliceUpdateAll)
}
